//1. Описать функцию PowerA3(A, B), вычисляющую третью степень числа A и возвращающую ее в переменной B (A — входной, B — выходной параметр; оба параметра являются вещественными). С помощью этой функции найти третьи степени пяти данных чисел.
#include <iostream>
using namespace std;
void PowerA3(float A, float* B)
{
    *B = A * A * A;
}
int main()
{
    int i;
    float A, B;
    for (i = 1; i <= 5; i++) {
        cout << "vvedite A =>";
        cin >> A ;
        PowerA3(A, &B);
        cout <<i<<") "<< "chislo v 3 stepeni =>"<<B<<endl;
    }
    return 0;
}

//2. Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
 −1, если X < 0; 0, если X = 0; 1, если X > 0. 
С помощью этой функции найти значение выражения Sign(A) + Sign(B) для данных вещественных чисел A и B.

#include <iostream>
using namespace std;
int Sign(float x) {
    if (x < 0) {
        return -1;
    }
    if (x == 0) {
        return 0;
    }
    if (x > 0) {
        return 1;
    }
}
int main()
{
    float A, B, s;
    cout << "vvedite A =>";
    cin >> A ;
    cout << "Vvedite B =>";
    cin >> B;
    s = Sign(A) + Sign(B);
    cout << "znachenie virozheniya ="<<s;
    return 0;
}

//3. Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, заключенного между двумя окружностями с общим центром и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2). С ее помощью найти площади трех колец, для которых даны внешние и внутренние радиусы.

#include <iostream>
#include <math.h>
using namespace std;
float RingS(float R1, float R2) {
    return M_PI * fabs(R1 * R1 - R2 * R2);
}
int main()
{
    setlocale(LC_ALL, "Russian");
    int i;
    float R1, R2, S;
    for (i = 1; i <= 3; i++) {
        cout <<i<< ")   Radius 1 => ";
        cin >> R1;
        cout << "     Radius 2 => ";
        cin >> R2;
        S = RingS(R1, R2);
        cout<<"     Ïëîùàäü ðàâíà = "<< S << endl;
    }
    return 0;
}

//4. Описать функцию Quarter(x, y) целого типа, определяющую номер координатной четверти, в которой находится точка с ненулевыми вещественными координатами (x, y). С помощью этой функции найти номера координатных четвертей для трех точек с данными ненулевыми координатами

#include <iostream>
#include <math.h>
using namespace std;
int Quarter(float x, float y) {
    if ((x > 0) && (y > 0)) {
        return 1;
    }
    if ((x < 0) && (y > 0)) {
        return 2;
    }
    if ((x < 0) && (y < 0)) {
        return 3;
    }
    if ((x > 0) && (y < 0)) {
        return 4;
    }
}
int main()
{
    int i, q;
    float x, y;
    for (i = 1; i <= 3; i++) {
        cout <<i<< ")   vvedite x => ";
        cin >> x;
        cout << "     vvedite y => ";
        cin >> y;
        q = Quarter(x, y);
        cout<<"     nomer chetverti => "<<q<<endl;
    }
    return 0;
}

//5. Описать функцию Fact2(N) вещественного типа, вычисляющую двойной факториал: 
N!! = 1·3·5·. . .·N, если N — нечетное; 
N!! = 2·4·6·. . .·N, если N — четное (N > 0 — параметр целого типа; вещественное возвращаемое значение используется для того, чтобы избежать целочисленного переполнения при больших значениях N).

#include <iostream>
#include <math.h>
using namespace std;
float Fact2(int N) {
    int i = 1;
    for ( N ; N > 0; N -= 2)
        i *= N;
    return i;
}
int main()
{
    int i, N, n;
    for (i = 1; i <= 2; i++) {
        cout <<i<< ")   vvedite N =>";
        cin >> N;
        n = Fact2(N);
        cout << "     factorial =>"<<n<<endl;
    }
    return 0;
}
